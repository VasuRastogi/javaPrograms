Index: src/com/company/Sorting/bubbleSort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.Sorting;\n\nimport java.util.Arrays;\n\npublic class bubbleSort {\n    public static void main(String[]args){\n        int[] arr = new int[]{1,2,5,4,3,6};\n        bubbleSrt(arr);\n        System.out.print(Arrays.toString(arr));\n    }\n    static void bubbleSrt(int[] arr){\n        for (int i = 0; i < arr.length; i++)\n            for (int j = 0; j < arr.length-i-1; j++)\n                if (arr[j] > arr[j+1])                {\n                    // swap arr[j+1] and arr[j]\n                    int temp = arr[j];\n                    arr[j] = arr[j+1];\n                    arr[j+1] = temp;\n                }\n    }\n}\n
===================================================================
diff --git a/src/com/company/Sorting/bubbleSort.java b/src/com/company/Sorting/bubbleSort.java
--- a/src/com/company/Sorting/bubbleSort.java	
+++ b/src/com/company/Sorting/bubbleSort.java	
@@ -1,4 +1,4 @@
-package com.company.Sorting;
+package com.company.src.com.company.Sorting;
 
 import java.util.Arrays;
 
Index: src/com/company/Sorting/mergeSort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.company.Sorting;\n\nclass mergeSort\n{\n\n    void merge(int arr[], int left, int mid, int right)\n    {\n        int n1 = mid - left + 1;\n        int n2 = right - mid;\n\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n\n        for (int i = 0; i < n1; ++i)\n            L[i] = arr[left + i];\n        for (int j = 0; j < n2; ++j)\n            R[j] = arr[mid + 1 + j];\n\n        int i = 0, j = 0;\n\n        int k = left;\n        while (i < n1 && j < n2) {\n            if (L[i] <= R[j]) {\n                arr[k] = L[i];\n                i++;\n            }\n            else {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n\n        while (i < n1) {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n\n        while (j < n2) {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    void sort(int arr[], int l, int r)\n    {\n        if (l < r) {\n            int m =l+ (r-l)/2;\n\n            sort(arr, l, m);\n            sort(arr, m + 1, r);\n\n            merge(arr, l, m, r);\n        }\n    }\n\n    static void printArray(int arr[])\n    {\n        int n = arr.length;\n        for (int i = 0; i < n; ++i)\n            System.out.print(arr[i] + \" \");\n        System.out.println();\n    }\n\n    public static void main(String args[])\n    {\n        int arr[] = { 12, 11, 13, 5, 6, 7 };\n\n        System.out.println(\"Given Array\");\n        printArray(arr);\n\n        mergeSort ob = new mergeSort();\n        ob.sort(arr, 0, arr.length - 1);\n\n        System.out.println(\"\\nSorted array\");\n        printArray(arr);\n    }\n}\n\n
===================================================================
diff --git a/src/com/company/Sorting/mergeSort.java b/src/com/company/Sorting/mergeSort.java
--- a/src/com/company/Sorting/mergeSort.java	
+++ b/src/com/company/Sorting/mergeSort.java	
@@ -1,4 +1,4 @@
-package com.company.Sorting;
+package com.company.src.com.company.Sorting;
 
 class mergeSort
 {
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectKey\">\n    <option name=\"state\" value=\"project://e2804f05-5315-4fc6-a121-c522a6c26470\" />\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,9 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectKey">
-    <option name="state" value="project://e2804f05-5315-4fc6-a121-c522a6c26470" />
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" project-jdk-name="sapmachine-17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"VcsDirectoryMappings\">\n    <mapping directory=\"\" vcs=\"Git\" />\n    <mapping directory=\"$PROJECT_DIR$/GithubDSA\" vcs=\"Git\" />\n  </component>\n</project>
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	
+++ b/.idea/vcs.xml	
@@ -2,6 +2,5 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/GithubDSA" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectModuleManager\">\n    <modules>\n      <module fileurl=\"file://$PROJECT_DIR$/PracJava.iml\" filepath=\"$PROJECT_DIR$/PracJava.iml\" />\n    </modules>\n  </component>\n</project>
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
--- a/.idea/modules.xml	
+++ b/.idea/modules.xml	
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
-      <module fileurl="file://$PROJECT_DIR$/PracJava.iml" filepath="$PROJECT_DIR$/PracJava.iml" />
+      <module fileurl="file://$PROJECT_DIR$/javaPrograms.iml" filepath="$PROJECT_DIR$/javaPrograms.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
